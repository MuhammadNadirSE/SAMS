@model TMD.Web.ViewModels.RightsManagement.RightsManagementViewModel

@{
    ViewBag.Title = "Rights Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


@using (Html.BeginForm("RightsManagement", "RolesAdmin"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    <div class="portlet portletCustomHeight light bg-inverse">
        <div class="portlet-title">
            <div class="caption">
                <i class="icon-user font-red-sunglo"></i>
                <span class="caption-subject font-red-sunglo bold uppercase">@ViewBag.Title</span>
            </div>
        </div>
        <div class="portlet-body form">
            <div class="form-body">
                <div class="row">
                    <div class="pull-left col-md-9">
                        <div class="form-group col-md-1"><label class="control-label">Role</label></div>
                        <div class="form-group col-md-5">
                            @Html.DropDownListFor(x => x.SelectedRoleId, new SelectList(Model.Roles, "Id", "Name"), new { @class = " mandatory form-control", onchange = "this.form.submit();" })
                        </div>
                    </div>
                </div>
                @foreach (var item in Model.Rights.Where(item => item.IsParent))
                {
                    <div class="form-group margin-top-20">
                        <div class="col-md-8">
                            <label>
                                @Html.CheckBoxFor(m => item.IsSelected, new { value = item.MenuId, @class = "parentCheckbox" })
                                @item.MenuTitle
                            </label>
                        </div>
                        @foreach (var childItems in @Model.Rights.Where(childItem => childItem.ParentId == item.MenuId))
                        {
                            <div class="form-group">
                                <div class="col-md-8">
                                    <label style="margin-left: 4%">
                                        @Html.CheckBoxFor(m => childItems.IsSelected, new { value = childItems.MenuId, @class = "childCheckbox" })
                                        @childItems.MenuTitle
                                    </label>
                                </div>
                                @foreach (var actions in @Model.Rights.Where(actions => actions.ParentId == childItems.MenuId))
                                {
                                    <div class="form-group">
                                        <div class="col-md-8">
                                            <label style="margin-left: 4%">
                                                @Html.CheckBoxFor(m => actions.IsSelected, new { value = actions.MenuId, @class = "childCheckbox actionChek" })
                                                @actions.MenuTitle
                                            </label>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                }

            </div>

        </div>
        <div class="form-actions">
            <div class="row">
                <div class="col-md-6 margin-top-20">
                    @Html.ActionLink("Save", "PostRightsManagement", new { roleValue = "SelectedRoleValue", selectedList = "SelectedListValues" }, new { @class = "btn blue", id = "btnSave" })
                </div>
                <div class="col-md-6">
                </div>
            </div>
        </div>
    </div>
}
<script>
    $("#btnSave").click(function (evt) {
        $("#btnSave").prop("href", ProcessValue($("#btnSave").prop("href")));
    });

    function ProcessValue(fakedUri) {
        var uri = fakedUri.replace("SelectedRoleValue", $('#SelectedRoleId').val());
        uri = uri.replace("SelectedListValues", getSelectedList());
        return uri;
    }

    function getSelectedList() {
        var selectedList = "";
        $("input:checkbox:checked").each(function () {
            if ($(this).attr('value') != undefined && $(this).attr('value').length > 0) {
                selectedList += $(this).attr('value') + ",";
            }
        });
        if (selectedList.length > 1)
            selectedList = selectedList.substring(0, selectedList.length - 1);
        return selectedList;
    }


</script>
