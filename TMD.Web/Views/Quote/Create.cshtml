@using System.Web.UI.WebControls
@model  TMD.Web.ViewModels.Quote.QuoteViewModel
@{
    string createUpdate = Model.Quote.QuoteID > 0 ? "Update" : "Add New";
    ViewBag.Title = createUpdate + " Quote";
    Session["MenuKey"] = 4;

    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    //string[] userPermissionsSet = (string[])HttpContext.Current.Session["UserPermissionSet"];
    //string display = "";
    //bool readonly1 = true;
}


@using (Html.BeginForm("Create", "Quote", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id= "QuoteForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Quote.QuoteID)
    @Html.HiddenFor(x => x.Quote.CreatedDate)
    @Html.HiddenFor(x => x.Quote.CreatedBy)
 
    <div class="portlet light bg-inverse">
        <div class="portlet-title">
            <div class="caption">
                <i class="icon-handbag font-red-sunglo"></i>
                <span class="caption-subject font-red-sunglo bold uppercase">Quote</span>
                <span class="caption-helper">@createUpdate</span>
            </div>
        </div>

        <div class="portlet-body form">
            <div class="form-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quote.Subject, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.Quote.Subject, new { @class = "form-control mandatory fullRowField", placeholder = "Quote Subject",@id="QuoteSubject" })
                                @Html.ValidationMessageFor(model => model.Quote.Subject)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quote.QuoteReferenceNo, new {@class = "control-label col-md-4 requiredLabel" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.Quote.QuoteReferenceNo, new {@class = "form-control mandatory", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.Quote.QuoteReferenceNo)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quote.CreatedDate, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.Quote.CreatedDate, "{0:d}", new { @class = "form-control  mandatory", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.Quote.CreatedDate)
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quote.ContactId, new {@class = "control-label col-md-4 requiredLabel"})
                            <div class="col-md-8">
                                @Html.DropDownListFor(x => x.Quote.ContactId, new SelectList(Model.Contacts, "ContactID", "FirstName", Model.Quote.ContactId), "--Please Select--", new {@class = "form-control select2me" })
                                @Html.ValidationMessageFor(model => model.Quote.ContactId)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quote.QuoteDetail.ProductId, new {@class = "control-label col-md-4 requiredLabel"})
                            <div class="col-md-8">
                                @Html.DropDownListFor(x => x.Quote.QuoteDetail.ProductId, new SelectList(Model.Products, "ProductID", "ProductName", Model.Quote.QuoteDetail.ProductId), "--Please Select--", new {@class = "form-control select2me",@id="ProductsDDL" })
                                @Html.ValidationMessageFor(model => model.Quote.QuoteDetail.ProductId)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quote.QuoteDetail.Make, new {@class = "control-label col-md-4 requiredLabel"})
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.Quote.QuoteDetail.Make, new {@class = "form-control mandatory", placeholder = "Product Make"})
                                @Html.ValidationMessageFor(model => model.Quote.QuoteDetail.Make)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quote.QuoteDetail.ModelId, new {@class = "control-label col-md-4 requiredLabel"})
                            <div class="col-md-8">
                                @Html.DropDownListFor(x => x.Quote.QuoteDetail.ModelId, new SelectList(Model.ProductModels, "ProductModelId", "ModelName", Model.Quote.QuoteDetail.ModelId), "--Please Select--", new {@class = "form-control select2me",@id="modelDDL"})
                                @Html.ValidationMessageFor(model => model.Quote.QuoteDetail.ModelId)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quote.QuoteDetail.Price, new {@class = "control-label col-md-4 requiredLabel" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.Quote.QuoteDetail.Price, new {@class = "form-control mandatory", placeholder = "Product Price"})
                                @Html.ValidationMessageFor(model => model.Quote.QuoteDetail.Price)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quote.QuoteDetail.Quantity, new {@class = "control-label col-md-4 requiredLabel" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.Quote.QuoteDetail.Quantity, new {@class = "form-control  mandatory", placeholder = "Product Quantity"})
                                @Html.ValidationMessageFor(model => model.Quote.QuoteDetail.Quantity)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quote.PaymentTerms, new {@class = "control-label col-md-4"})
                            <div class="col-md-8">
                                @Html.TextAreaFor(m => m.Quote.PaymentTerms, new {@class = "form-control mandatory", placeholder = "Payment Terms", rows=3})
                                @Html.ValidationMessageFor(model => model.Quote.PaymentTerms)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quote.DeliveryTerms, new {@class = "control-label col-md-4"})
                            <div class="col-md-8">
                                @Html.TextAreaFor(m => m.Quote.DeliveryTerms, new {@class = "form-control  mandatory", placeholder = "Delivery Terms", rows = 3 })
                                @Html.ValidationMessageFor(model => model.Quote.DeliveryTerms)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quote.InstallationTerms, new {@class = "control-label col-md-4"})
                            <div class="col-md-8">
                                @Html.TextAreaFor(m => m.Quote.InstallationTerms, new {@class = "form-control mandatory", placeholder = "Installation Terms", rows = 3 })
                                @Html.ValidationMessageFor(model => model.Quote.InstallationTerms)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quote.WarrantyTerms, new {@class = "control-label col-md-4"})
                            <div class="col-md-8">
                                @Html.TextAreaFor(m => m.Quote.WarrantyTerms, new {@class = "form-control  mandatory", placeholder = "Warranty Terms", rows = 3 })
                                @Html.ValidationMessageFor(model => model.Quote.WarrantyTerms)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quote.FreeServiceTerms, new {@class = "control-label col-md-4"})
                            <div class="col-md-8">
                                @Html.TextAreaFor(m => m.Quote.FreeServiceTerms, new {@class = "form-control mandatory", placeholder = "Free Service Terms", rows = 3})
                                @Html.ValidationMessageFor(model => model.Quote.FreeServiceTerms)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quote.ValidityTerms, new {@class = "control-label col-md-4"})
                            <div class="col-md-8">
                                @Html.TextAreaFor(m => m.Quote.ValidityTerms, new {@class = "form-control  mandatory", placeholder = "Validity Terms", rows = 3})
                                @Html.ValidationMessageFor(model => model.Quote.ValidityTerms)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <!--/span-->
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label col-md-4">Quote Exclusion(s)</label>
                            <div class="col-md-8">
                                @Html.DropDownList("Specs", new SelectList(Model.Exclusions, "ExclusionId", "Name"), "Select Exclusion", new { @class = "form-control select2me mandatoryModal", id = "TechSpecId" })
                            </div>

                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="col-md-2">
                                <button type="button" class="btn green-meadow prominent" id="TechnicalSpecAddBtn" title="Add Technical Spec.">
                                    <i class="fa fa-plus-square-o"></i>
                                    Add
                                </button>
                            </div>
                        </div>
                    </div>
                    <!--/span-->
                </div>
                <div class="row hideOthersDetail">
                    <div class="portlet box">
                        <div class="portlet-body flip-scroll">
                            <table class="table table-bordered table-striped table-condensed flip-content" id="ExclusionsTable">
                                <thead class="flip-content">
                                    <tr>
                                        <th style="display: none"></th>
                                        <th width="90%">
                                            Exclusion
                                        </th>
                                        <th width="10%">
                                            <span class="mustDisplay">Remove</span>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody id="techspecBody">
                                    @if (Model.QuoteExclusions!= null)
                                    {
                                        for (int i = 0; i < Model.QuoteExclusions.Count; i++)
                                        {
                                            <tr data-id="@i">
                                                <td style="display: none">
                                                    <input name='QuoteExclusions.Index' type='hidden' value='@i' />
                                                    <input name='QuoteExclusions[@i].QuoteExclusionId' type='hidden' value='@Model.QuoteExclusions[i].QuoteExclusionId' />
                                                    <input name='QuoteExclusions[@i].ExclusionId' type='hidden' value='@Model.QuoteExclusions[i].ExclusionId' />
                                                    <input name='QuoteExclusions[@i].QuoteId' type='hidden' value='@Model.QuoteExclusions[i].QuoteId' />
                                                </td>
                                                <td width="90%">
                                                    <input name='QuoteExclusions[@i].ExclusionName' tabindex="-1" type='text' class="ProductTableColumn" readonly="readonly" value='@Model.QuoteExclusions[i].ExclusionName' />
                                                </td>
                                                <td width="10%">
                                                    <a href="javascript:;" class="btn default btn-xs red remove" tabindex="-1" title="Delete"><i class="fa fa-trash-o"></i></a>
                                                </td>
                                            </tr>
                                        }
                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
        </div>
               

           
        <div class="form-actions">
            <div class="row">
                <div class="col-md-6">
                    <div class="row">
                        <div class="col-md-offset-3 col-md-8">
                            <button type="submit" class="btn green-seagreen hideOthersDetail" value="Submit">Submit</button>
                            @if (Model.Quote.QuoteID > 0)
                            {
                                <a href="~/Quote/Print/@(Model.Quote.QuoteID)" class="btn blue hidden-print">Print <i class="fa fa-print"></i></a>
                            }
                            <a href="~/Quote/Index" class="btn default cancelBtn">Cancel</a>

                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                </div>
            </div>
        </div>
    </div>

}


<script>
    function clearProductModelDLL() {
        $("#modelDDL").empty();
        //$("#modelDDL").select2('data', null);
        var option = new Option("--Please Select--", "");
        option.selected = true;
        $("#modelDDL").append(option);
        $("#modelDDL").trigger("change");
    }
    $(document).ready(function () {
        if ('@Model.Quote.QuoteID' < 1) {
            clearProductModelDLL();
        }
        $("#ProductsDDL").on('change', function () {
            //Quote Subject
            if ($("#ProductsDDL").select2('data').text !== "--Please Select--") {
                $("#QuoteSubject").val("Quotation for supply of " + $("#ProductsDDL").select2('data').text);
            } else {
                $("#QuoteSubject").val("Quotation for supply of ");
            }

            //Models Dropdown List
            var productId = $("#ProductsDDL").val();
            var productModelsList = '@Html.Raw(Json.Encode(Model.ProductModels))';
            var parsedproductModelsList = JSON.parse(productModelsList);
            clearProductModelDLL();
            $.each(parsedproductModelsList, function (key, value) {
                if (value.ProductId === parseInt(productId)) {
                    var option = new Option(value.ModelName,value.ProductModelId);
                    $("#modelDDL").append(option);
                    //$("#modelDDL").select2('data', { id: value.ProductModelId, text: value.ModelName });
                }
            });
        });

        $('.remove').live("click", function () {
            if (!confirm("Are you sure to delete this exclusion?")) {
                return;
            }
            $(this).parent().parent().remove();
        });

        $('#TechnicalSpecAddBtn').on("click", function () {
            var index = $("#techspecBody").children("tr").length;
            var quoteId = '@Model.Quote.QuoteID';
            var theId = $("#TechSpecId").select2('data').id;
            var theSelection = $("#TechSpecId").select2('data').text;

            //validate fields
            if (theId === "") {
                toastr.warning("Select exclusion");
                return false;
            }

            if ($("#techspecBody").children("tr").children("td").html() === "No data available in table") {
                index = index - 1;
                $("#techspecBody").children("tr").remove();
            }
            var indexCell = "<td style='display:none'>" +
                "<input name='QuoteExclusions.Index' type='hidden' value='" + index + "' />" +
                "<input name='QuoteExclusions[" + index + "].ExclusionId'  type='hidden'  value='" + theId + "'/>" +
                "<input name='QuoteExclusions[" + index + "].QuoteId' type='hidden'  value='" + quoteId + "'/>" +
                "</td>";

            //QuoteExclusions
            var html = ' <tr data-id=' + index + '>' +
                indexCell +
                '<td>' +
                '<input tabindex="-1" value="' + theSelection + '" type="text" class = "ProductTableColumn" readOnly = "readOnly"/>' +
                '</td>' +
                '<td>' +
                '<a href="javascript:;" class="btn default btn-xs red remove" tabindex="-1" title="Delete"><i class="fa fa-trash-o"></i></a>' +
                '</td>' +
                '</tr>';
            $('#techspecBody').append(html);
        });
    });

</script>
