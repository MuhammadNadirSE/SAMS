@using System
@using System.Configuration
@using System.Web
@using System.Web.Helpers
@model TMD.Web.ViewModels.Payroll.PayrollCreateViewModel

@{
    ViewBag.Title = "Payroll";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    string[] userPermissionsSet = (string[])HttpContext.Current.Session["UserPermissionSet"];
    var hasBasicSalary = Model.EmployeePayrolls.Find(x => x.AllowanceTypeId.Value.Equals(Convert.ToInt32(ConfigurationManager.AppSettings["BasicSalaryId"]))) == null ? false : true;
    var isUpdate = Model.Eid != null;
}
<style>
    .select2meCustom {
        width: 100% !important;
    }
</style>
@using (Html.BeginForm("Create", "Payroll", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "ticketForm" }))
{
    <div class="portlet  light bg-inverse">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-2x fa-money font-red-sunglo"></i>
                <span class="caption-subject font-red-sunglo bold uppercase">@ViewBag.Title</span>
                @if (!Model.Eid.HasValue)
                {
                    <span class="caption-helper">Create</span>
                }
                else
                {
                    <span class="caption-helper">Update</span>
                }
            </div>
            <div class="pull-right">
                @*<a href="" class="btn blue-madison" onclick=""><i class="fa fa-plus"> Add New</i></a>*@
            </div>
        </div>
        <div class="portlet-body form">
            <div class="form-body">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="col-md-3"><label class="control-label">Month</label>
                            </div>
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.AllowanceMonth, "{0:dd-MMM-yyyy}", new { @class = "mandatory form-control datepickerFilterMonth cursorHand", @id = "PayrollMonth", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-md-3"><label class="control-label">Employee</label>
                            </div>
                            <div class="col-md-9">
                                @Html.DropDownListFor(m => m.Eid, new SelectList(Model.Employees, "EmployeeId", "FullName"), "Select Employee", new {@class = "form-control mandatory select2me select2meCustom", @id = "EmployeeDDL_Id"})
                            </div>
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="form-group">
                            <div class="col-md-4">
                                <label class="control-label">Basic Salary</label>
                            </div>
                            <div class="col-md-8">
                                @if (hasBasicSalary)
                                {
                                    <input type="text" readonly="readonly" placeholder="Basic Salary" class="form-control mandatory" id="BasicSalary" value='@Model.EmployeePayrolls[0].Amount'/>

                                    <input name='EmployeePayrolls.Index' type='hidden' value='0'/>
                                    <input readonly='readonly' name='EmployeePayrolls[0].AllowanceTypeId' type='hidden' value='@ConfigurationManager.AppSettings["BasicSalaryId"]'/>
                                    <input readonly='readonly' name='EmployeePayrolls[0].EmployeeId' value='@Model.EmployeePayrolls[0].EmployeeId' type='hidden' id="EmpId_basicSalary"/>
                                    <input readonly='readonly' name='EmployeePayrolls[0].AllowanceMonth' value='@Model.EmployeePayrolls[0].AllowanceMonth' type='hidden' id="AllowanceMonth_basicSalary"/>
                                    <input readonly='readonly' name='EmployeePayrolls[0].Amount' value='@Model.EmployeePayrolls[0].Amount' type='hidden' id="AllowanceAmount_basicSalary"/>
                                    @Html.HiddenFor(x => x.EmployeePayrolls[0].Id)
                                    @Html.HiddenFor(x => x.EmployeePayrolls[0].RecCreatedBy)
                                    @Html.HiddenFor(x => x.EmployeePayrolls[0].RecCreatedDate)
                                }
                                else
                                {
                                    <input type="text" readonly="readonly" placeholder="Basic Salary" class="form-control" id="BasicSalary"/>

                                    <input name='EmployeePayrolls.Index' type='hidden' value='0'/>
                                    <input readonly='readonly' name='EmployeePayrolls[0].AllowanceTypeId' type='hidden' value='@ConfigurationManager.AppSettings["BasicSalaryId"]'/>
                                    <input readonly='readonly' name='EmployeePayrolls[0].EmployeeId' type='hidden' id="EmpId_basicSalary"/>
                                    <input readonly='readonly' name='EmployeePayrolls[0].AllowanceMonth' type='hidden' id="AllowanceMonth_basicSalary"/>
                                    <input readonly='readonly' name='EmployeePayrolls[0].Amount' type='hidden' id="AllowanceAmount_basicSalary"/>
                                }
                            </div>
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="portlet box red-sunglo">
                        <div class="portlet-title">
                            <div class="caption">
                                <i class="fa fa-money"></i>Pay Roll
                            </div>
                            <div class="tools">
                                <a href="#" data-toggle="modal" data-target="#myModal" class="" title="Add Allowance" style="color: white;">
                                    <i class="fa fa-plus"></i>
                                </a>
                                <a href="javascript:;" class="collapse">
                                </a>
                            </div>
                        </div>
                        <div class="portlet-body flip-scroll">
                            <table class="table table-striped table-hover Tickets" id="PayRollTable">
                                <thead class="flip-content">
                                <tr>
                                    <th></th>
                                    <th>
                                        Allowance Type
                                    </th>
                                    <th>
                                        Amount
                                    </th>
                                    <th>
                                        Month
                                    </th>
                                    <th class="">
                                        Action
                                    </th>
                                </tr>
                                </thead>
                                <tbody>
                                @if (Model.EmployeePayrolls != null)
                                {
                                    for (int i = 1; i < Model.EmployeePayrolls.Count; i++)
                                    {

                                        <tr data-id="@i">
                                            <td style="width: 1% !important">
                                                <input name='EmployeePayrolls.Index' type='hidden' value='@i'/>
                                                <input readonly='readonly' name='EmployeePayrolls[@i].AllowanceTypeId' type='hidden' value='@Model.EmployeePayrolls[i].AllowanceTypeId'/>
                                                <input readonly='readonly' name='EmployeePayrolls[@i].EmployeeId' type='hidden' value='@Model.EmployeePayrolls[i].EmployeeId'/>
                                                <input readonly='readonly' name='EmployeePayrolls[@i].AllowanceMonth' type='hidden' value='@Model.EmployeePayrolls[i].AllowanceMonth'/>
                                                <input readonly='readonly' name='EmployeePayrolls[@i].Amount' type='hidden' value='@Model.EmployeePayrolls[i].Amount'/>
                                                @Html.HiddenFor(x => x.EmployeePayrolls[i].Id)
                                                @Html.HiddenFor(x => x.EmployeePayrolls[i].RecCreatedBy)
                                                @Html.HiddenFor(x => x.EmployeePayrolls[i].RecCreatedDate)
                                            </td>
                                            <td>@Model.EmployeePayrolls[i].AllowanceTypeTitle</td>
                                            <td>@Model.EmployeePayrolls[i].Amount</td>
                                            <td>@Model.EmployeePayrolls[i].AllowanceMonth.ToString("MMMM yyyy")</td>
                                            <td><a href="javascript:;" title="remove" class="remove"><i class="fa fa-trash-o"></i></a></td>
                                        </tr>

                                    }
                                }
                                </tbody>
                            </table>

                            <h4 class="text-right">Gross Amount: Rs. <span id="grossAmout">@Model.TotalAllowance</span> </h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-actions">
           
                    <div class="row">
                        <div class="col-md-10">
                        </div>
                        <div class="col-md-2 float-right">
                            <input type="submit" class="btn green-seagreen" onclick="return(ValidateFields(event) && validateUserPassword(event))" value=" Submit"/>
                            <a href="@Url.Action("Index", "Payroll")" class="btn default">Cancel</a>

                        </div>
                        </div>
              
        </div>
    </div>
    
}

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-centered">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header " style="background: #e26a6a; color: white;">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title text-align-center ">Add Allowance</h4>
            </div>
            <div class="modal-body">

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.Label("Allowance Type", new { @class = "control-label" })
                            </div>
                            <div class="col-md-8">
                                @Html.DropDownList("AllowanceTypes", new SelectList(Model.AllowanceTypes, "TypeId", "TypeTitle"), new { @id = "Payroll_AllowanceTypeId", @class = "form-control" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.Label("Amount", new { @class = "control-label" })
                            </div>
                            <div class="col-md-9">
                                <input type="text" class="form-control" id="allowanceAmount" onkeydown="return isNumberKey(this)">
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger saveAllowance">Add Allowance</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
<style>
    .ui-datepicker-calendar {
        display: none;
    }
</style>
<script>
    $(document).ready(function () {
        $('#EmployeeDDL_Id').addClass("select2meCustom");
        window.siteUrl = $("#siteURL").val();
        if ('@isUpdate' == 'true' || '@isUpdate' == 'True') {
            $('#EmployeeDDL_Id').addClass("notAllowed");
            $('#PayrollMonth').addClass("notAllowed");
        }
        //Check user permissions and disable ddl
        if ('@userPermissionsSet.Contains("AddAllowance")' == 'False')
            $('#EmployeeDDL_Id').addClass('notAllowed');

        $('<style type="text/css"> .ui-datepicker-current { display: none; } </style>').appendTo("head");
        //$('#EmployeeDDL_Id').select2();
        $('#Payroll_AllowanceTypeId').select2();



        // Store list of employees locally
        var employeesRawList = '@Html.Raw(Json.Encode(Model.Employees))';
        var employeesparsedList = JSON.parse(employeesRawList);

        $("#AllowanceMonth_basicSalary").val($('#PayrollMonth').val());
        $("#EmployeePayrolls[0]_AllowanceMonth").val($('#PayrollMonth').val());

        var employeeId = $('#EmployeeDDL_Id').val();
        $.each(employeesparsedList, function (key, value) {
            if (value.EmployeeId == employeeId) {
                if ('@isUpdate' == "False")
                    $("#BasicSalary").val(value.Salary);
            }
        });

        $('#EmployeeDDL_Id').on('change', function () {
            oTable.fnClearTable();
            var id = $('#EmployeeDDL_Id').val();
            $.each(employeesparsedList, function (key, value) {
                if (value.EmployeeId == id) {
                    $("#BasicSalary").val(value.Salary);
                    $("#EmpId_basicSalary").val(value.EmployeeId);
                    $("#AllowanceAmount_basicSalary").val(value.Salary);
                }
            });
        });

        $(".remove").on('click', function (e) {
            e.preventDefault();

            if (confirm("Are you sure to delete this Allowance?") == false) {
                return;
            }

            var targetRow = $(this).closest("tr").get(0);
            var aPos = oTable.fnGetPosition(targetRow);
            var payrollId = $(this).closest("tr").find('#EmployeePayrolls_' + (aPos + 1) + '__Id').val();
            $.ajax({
                url: window.siteUrl + "/Payroll/Delete",
                type: "POST",
                data: "{ id:" + payrollId + "}",
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    if (response)
                        toastr.success("Allowance removed successfully.");
                    else
                        toastr.error("Allowance removed successfully.");
                }
            });



            oTable.fnDeleteRow(aPos);
            grossAmount = parseFloat($('#grossAmout').text()) - parseFloat(($(this).attr("data-amount")));
            $('#grossAmout').text(grossAmount);
        });

        $('#PayrollMonth').on('change', function () {
            $("#AllowanceMonth_basicSalary").val($('#PayrollMonth').val());
        });

        var oTable = $("#PayRollTable").dataTable({
            "paging": false,
            "ordering": false,
            "info": false,
            bFilter: false,

        });

        if ($("#PayRollTable").children("tbody").children("tr").children("td").html() == "No data available in table") {
            $("#PayRollTable").children("tbody").children("tr").remove();
        }


        $(".saveAllowance").on('click', function () {
            var allowanceMonth = $('#PayrollMonth').val();
            window.allowanceAmount = $('#allowanceAmount').val();
            if (window.allowanceAmount == "") {
                toastr.error("Enter some amount.");
                return false;
            }
            var allowanceTypeId = $('#Payroll_AllowanceTypeId').val();
            var allowanceTypeTitle = $('#Payroll_AllowanceTypeId option:selected').text();

            $(this).closest(".modal").modal('hide');

            var rowCount = $('table#PayRollTable tbody tr:last').index() + 2;//To Manipulate Rows of addrees

            var empId = $('#EmployeeDDL_Id').val();
            $.each(employeesparsedList, function (key, value) {
                if (value.EmployeeId == parseInt(empId)) {

                    window.allowanceRow = [
                        "<input name='EmployeePayrolls.Index' type='hidden' value='" + rowCount + "'/>" +
                        "<input readonly='readonly' type='hidden' name='EmployeePayrolls[" + rowCount + "].EmployeeId'  value='" + value.EmployeeId + "'/>",

                        "<input readonly='readonly' type='hidden' name='EmployeePayrolls[" + rowCount + "].AllowanceTypeId'  value='" + allowanceTypeId + "'/>" +
                        "<span>" + allowanceTypeTitle + "</span>",

                        "<span>" + allowanceAmount + "</span>" +
                        "<input readonly='readonly' type='hidden' name='EmployeePayrolls[" + rowCount + "].Amount' value='" + allowanceAmount + "'/>",

                        "<input readonly='readonly' type='hidden' name='EmployeePayrolls[" + rowCount + "].AllowanceMonth'  value='" + allowanceMonth + "'/>" +
                        "<span>" + allowanceMonth + "</span>",

                        "<a class='remove' data-amount='" + allowanceAmount + "' href='javascript:;'><i class='fa fa-trash-o'><i/></a>"];
                }
            });

            oTable.fnAddData(window.allowanceRow);

            var grossAmount = parseFloat($('#grossAmout').text()) + parseFloat(window.allowanceAmount);
            $('#grossAmout').text(grossAmount);
            //$(".remove").off('click');
            $(".remove").on('click', function () {
                grossAmount = parseFloat($('#grossAmout').text()) - parseFloat(($(this).attr("data-amount")));
                $('#grossAmout').text(grossAmount);
                var targetRow = $(this).closest("tr").get(0);
                var aPos = oTable.fnGetPosition(targetRow);
                oTable.fnDeleteRow(aPos);
                
            });

            $('#allowanceAmount').val("");
            $('#Payroll_AllowanceTypeId').select2('val', '');
        });


    });
</script>