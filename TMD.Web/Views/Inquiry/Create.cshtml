@using System.Web.UI.WebControls
@model  TMD.Web.ViewModels.Inquiry.InquiryViewModel
@{
    string createUpdate = Model.InquiryModel.InquiryID > 0 ? "Update" : "Add New";
    string itemId = Model.InquiryModel.InquiryID > 0 ? Model.InquiryModel.InquiryID.ToString() : "";
    ViewBag.Title = createUpdate + " Inquiry";
    Session["MenuKey"] = 4;

    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    //string[] userPermissionsSet = (string[])HttpContext.Current.Session["UserPermissionSet"];
    //string display = "";
    //bool readonly1 = true;


}


@using (Html.BeginForm("Create", "Inquiry", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @*@Html.AntiForgeryToken()
        @Html.ValidationSummary(true)*@
    @Html.HiddenFor(x => x.InquiryModel.InquiryID)
    @Html.HiddenFor(x => x.InquiryModel.CreatedDate)
    @Html.HiddenFor(x => x.InquiryModel.CreatedBy)
    @Html.HiddenFor(x => x.InquiryModel.UserId)
    
    
   @functions {

    public SelectList GetAllPriorities()
     {
        SelectList Priorities = new SelectList(new[]
             {
                new { Id = "1", Name = "Low" },
                new { Id = "2", Name = "Medium" },
                new { Id = "3", Name = "High" },
    
             }, "Id", "Name",Model.InquiryModel.Priority);

        return Priorities;
     }
   }
    
    
   
   
    <div class="portlet light bg-inverse">
        <div class="portlet-title">
            <div class="caption">
                <i class="icon-user font-red-sunglo"></i>
                <span class="caption-subject font-red-sunglo bold uppercase">Inquiry</span>
               
            </div>
        </div>

        <div class="portlet-body form">
            <div class="form-body">

                <div class="row">

                    <!--Company Name is Inquiry Title-->
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.InquiryModel.CompanyName, new {@class = "control-label col-md-4 requiredLabel"})
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.InquiryModel.CompanyName, new {@class = "form-control mandatory", placeholder = "Inquiry Title"})


                                @Html.ValidationMessageFor(model => model.InquiryModel.CompanyName)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.InquiryModel.InquiryDate, new { @class = "control-label col-md-4 requiredLabel" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.InquiryModel.InquiryDate, "{0:d}", new { @class = "datepicker form-control  mandatory cursorHand", placeholder = "Inquiry Date", @readonly = "readonly" })


                                @Html.ValidationMessageFor(model => model.InquiryModel.InquiryDate)
                            </div>
                        </div>
                    </div>


                    <!--/span-->
                </div>



                <div class="row">

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.InquiryModel.ContactID, new {@class = "control-label col-md-4 requiredLabel"})
                            <div class="col-md-8">
                                <div class="input-group">
                                    @Html.DropDownListFor(x => x.InquiryModel.ContactID, new SelectList(Model.Contacts, "ContactID", "FirstName", Model.InquiryModel.ContactID), "--Please Select--", new { @class = "form-control select2me" })
                                    <span class="input-group-btn">
                                        <a href="~/Contact/Create?returnUrl=/Inquiry/Create/@itemId" class="btn default green-seagreen-stripe" title="Add New Contact">
                                            <i class="fa fa-plus"></i>
                                        </a>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.InquiryModel.ContactID)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.InquiryModel.InquiryProductId, new {@class = "control-label col-md-4 requiredLabel"})
                            <div class="col-md-8">
                                <div class="input-group">
                                    @Html.DropDownListFor(x => x.InquiryModel.InquiryProductId, new SelectList(Model.Products, "ProductID", "ProductName", Model.InquiryModel.InquiryProductId), "--Please Select--", new { @class = "form-control select2me" })
                                    <span class="input-group-btn">
                                        <a href="~/Product/Create?returnUrl=/Inquiry/Create/@itemId" class="btn default green-seagreen-stripe" title="Add New Product">
                                            <i class="fa fa-plus"></i>
                                        </a>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.InquiryModel.InquiryProductId)
                            </div>
                        </div>
                    </div>
                    <!--/span-->
                </div>


                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.InquiryModel.Priority, new {@class = "control-label col-md-4 requiredLabel"})
                            <div class="col-md-8">
                                @Html.DropDownListFor(x => x.InquiryModel.Priority, GetAllPriorities(), "--Please Select--", new {@class = "form-control select2me"})
                                @Html.ValidationMessageFor(model => model.InquiryModel.Priority)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.InquiryModel.ContactResponse, new {@class = "control-label col-md-4 requiredLabel"})
                            <div class="col-md-8">
                                @Html.TextAreaFor(m => m.InquiryModel.ContactResponse, new {@class = "form-control mandatory", placeholder = "Contact Response"})
                                @Html.ValidationMessageFor(model => model.InquiryModel.ContactResponse)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.InquiryModel.UserComments, new {@class = "control-label col-md-4 requiredLabel"})
                            <div class="col-md-8">
                                @Html.TextAreaFor(m => m.InquiryModel.UserComments, new {@class = "form-control mandatory", placeholder = "User Comments"})
                                @Html.ValidationMessageFor(model => model.InquiryModel.UserComments)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.UploadFiles, new {@class = "control-label col-md-4"})
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.UploadFiles, new {@class = "form-control mandatory", type = "file", multiple = "true"})
                            </div>
                        </div>
                    </div>
                    @if (Model.Documents.Any())
                    {
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Download Doc(s)", new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @foreach (var doc in Model.Documents)
                                    {
                                        <div>
                                            <div class="btn-group btn-group-solid">
                                                <a href="~/Document/Download/@doc.DocumentId" class="btn blue"><i class="fa fa-download"></i></a>
                                                <button type="button" class="btn red" onclick="DeleteDocument(@doc.DocumentId,this);"><i class="fa fa-trash-o"></i></button>
                                            </div>
                                            @doc.DocumentName

                                            <br />
                                            <br />
                                        </div>
                                    }
                                    
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
               

           
        <div class="form-actions">
            <div class="row">
                <div class="col-md-6">
                    <div class="row">
                        <div class="col-md-offset-3 col-md-8">
                            <input type="submit" class="btn green-seagreen hideOthersDetail" value="Submit" />
                            <button type="reset" class="btn green-jungle hideOthersDetail">Reset</button>
                            <a href="~/Inquiry/Index" class="btn default cancelBtn">Cancel</a>

                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                </div>
            </div>
        </div>
    </div>

}
<script>
    $(document).ready(function() {
        window.siteURL = $('#siteURL').val();


    });
    function DeleteDocument(docId, control) {

        bootbox.confirm("After clicking OK, record will be deleted permanently.", function (result) {
            if (result) {
                //write code to delete this record
                $.ajax({
                    url: window.siteURL + '/Document/Delete',
                    type: 'POST',
                    data: { Id: docId },
                    dataType: "json",
                    success: function (result) {
                        $(control).parent().parent().remove();
                        toastr.success(result.response);
                    },
                    error: function (result, error) {
                        toastr.error(result.response);
                    }
                });
            }
        });
    }
</script>