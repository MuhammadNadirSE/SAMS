@using System.Linq
@model  TMD.Web.ViewModels.Employee.EmployeeViewModel
@{
    string createUpdate = Model.Employee.EmployeeId>0 ? "Update":"Add New";
    ViewBag.Title = createUpdate +" Employee";
    Session["MenuKey"] = 4;

    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    string[] userPermissionsSet = (string[])HttpContext.Current.Session["UserPermissionSet"];
    string display = "";
    bool readonly1 = true;
    bool IsSuperAdmin = Session["RoleName"].ToString().ToLower() == "superadmin";
}


@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", @onsubmit = "return ValidateFields(this)" }))
{
    @*@Html.AntiForgeryToken()
      @Html.ValidationSummary(true)*@
    @Html.HiddenFor(x=>x.Employee.EmployeeId)
    @Html.HiddenFor(x=>x.Employee.RecCreatedDt)
    @Html.HiddenFor(x=>x.Employee.RecCreatedBy)
    @Html.HiddenFor(x=>x.Employee.UserId)
    @Html.HiddenFor(x=>x.SupervisorIdsToDelete)

    <div class="portlet light bg-inverse">
        <div class="portlet-title">
            <div class="caption">
                <i class="icon-user font-red-sunglo"></i>
                <span class="caption-subject font-red-sunglo bold uppercase">Employee</span>
                <span class="caption-helper">@createUpdate</span>
            </div>
        </div>

        <div class="portlet-body form">
            <div class="form-body">
                <h3 class="form-section">Official Details</h3>
               
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group ">
                                @Html.LabelFor(model => model.Employee.FullName, new {@class = "control-label col-md-3 requiredLabel" })

                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Employee.FullName, new { @class = "form-control mustReadonly", placeholder = "Enter Full Name" })
                                    @Html.ValidationMessageFor(model => model.Employee.FullName)
                                </div>
                            </div>
                        </div>
                        <!--/span-->
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Employee.DesignationId, new { @class = "control-label col-md-3 requiredLabel" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.Employee.DesignationId, new SelectList(Model.Designation, "DesignationId", "Title", Model.Employee.DesignationId), new { @class = "form-control col-md-3 mustReadonly", @id = "DesignationDDL" })
                                    @Html.ValidationMessageFor(model => model.Employee.DesignationId)
                                </div>
                            </div>
                        </div>
                        <!--/span-->
                    </div>
                    <!--/row-->
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Employee.Email, new { @class = "control-label col-md-3 requiredLabel" })

                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Employee.Email, new { @class = "form-control mustReadonly", placeholder = "e.g. username@domain.com" })
                            @Html.ValidationMessageFor(model => model.Employee.Email)
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Employee.UserName, new { @class = "control-label col-md-3 requiredLabel" })

                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Employee.UserName, new {@class = "form-control mustReadonly"})
                            @Html.ValidationMessageFor(model => model.Employee.UserName)
                        </div>
                    </div>
                </div>
                <!--/span-->
            </div>
                    <!--/row-->
                    <div class="row">
                        <div class="col-md-6 hideOthersDetail">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Employee.Salary, new {@class = "control-label col-md-3"})

                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Employee.Salary, new { @class = "form-control mustReadonly", placeholder = "Amount e.g. 10000 (Optional)", onkeypress = "return isNumberKey(this)" })

                                </div>
                            </div>
                        </div>
                        <!--/span-->
                        <div class="col-md-6 mustDisplay hideOthersDetail">
                            <div class="form-group">
                                
                                @Html.LabelFor(model => model.Employee.RoleId, new { @class = "control-label col-md-3" })
                                <div class="col-md-5">
                                    @Html.DropDownListFor(model => model.Employee.RoleId, new SelectList(Model.Roles, "Id", "Name", Model.Employee.RoleId), new {@class = "form-control col-md-3", @id = "RoleDDL"})
                                </div>
                                @Html.LabelFor(model => model.Employee.IsRegistered, new { @class = "control-label col-md-3" })
                                <div class="col-md-1" style="margin-top: 2%;">
                                    @Html.CheckBoxFor(model => model.Employee.IsRegistered, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <!--/span-->
                    </div>
                    <!--/row-->

                    
                    <h3 class="form-section">Personal Details</h3>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Employee.CellNumber, new {@class = "control-label col-md-3"})
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Employee.CellNumber, new {@class = "form-control readonlyOthersDetail", placeholder = "92-3XX-XXXXXXX", @id = "empPhone"})
                                </div>
                            </div>
                        </div>
                        <!--/span-->
                        <div class="col-md-6 hideOthersDetail">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Employee.CNIC, new {@class = "control-label col-md-3"})


                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Employee.CNIC, new {@class = "form-control", placeholder = "23421-5342221-1", @id = "empCNIC"})


                                </div>
                            </div>
                        </div>
                        <!--/span-->
                    </div>
                    <!--/row-->
                    <div class="row hideOthersDetail">

                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Employee.Address, new {@class = "control-label col-md-3"})


                                <div class="col-md-9">
                                    @Html.TextAreaFor(model => model.Employee.Address, new {rows = "2", @class = "form-control", placeholder = "Address", style = "resize: none"})


                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Employee.BankName, new {@class = "control-label col-md-3"})
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Employee.BankName, new {@class = "form-control", placeholder = "Bank Name"})


                                </div>
                            </div>
                        </div>
                        <!--/span-->

                    </div>
                    <div class="row hideOthersDetail">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Employee.BankAccountTitle, new {@class = "control-label col-md-3"})
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Employee.BankAccountTitle, new {@class = "form-control", placeholder = "Bank Title"})


                                </div>
                            </div>
                        </div>
                        <!--/span-->
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Employee.BankAccountNumber, new {@class = "control-label col-md-3"})
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Employee.BankAccountNumber, new {@class = "form-control", placeholder = "Bank #"})
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--/span-->
            </div>

            <!--/row-->
        </div>

        <div class="form-actions">
            <div class="row">
                <div class="col-md-6">
                    <div class="row">
                        <div class="col-md-offset-3 col-md-9">
                            <input type="submit" class="btn green-seagreen hideOthersDetail" value="Submit" />
                            <button type="reset" class="btn green-jungle hideOthersDetail">Reset</button>
                            <a href="~/Employees/Index" class="btn default cancelBtn">Cancel</a>

                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                </div>
            </div>
        </div>
    </div>

}


<script>
    $(document).ready(function () {
        
        @{
            if (userPermissionsSet.Contains("AddEmployee"))
            {
                display = "inline";
                readonly1 = false ;
            }
            else
            {
                display = "none";
                readonly1 = true ;
            }
        }
        
        $(".mustDisplay").css("display", '@display');
        if('@readonly1' == 'True')
            $(".mustReadonly").prop("readOnly", true);
        else
            $(".mustReadonly").prop("readOnly", false);

        
        var employee = $("#Employee_EmployeeId").val();
    
        if ('@IsSuperAdmin'==='False') {
            
            if (employee != "0") {
                if (employee != '@Session["EmployeeID"]') {

                    if ('@readonly1' != 'False') {
                        $(".hideOthersDetail").remove();
                        $(".readonlyOthersDetail").prop("readOnly", true);
                        $(".mustDisplay").css("display", "none");
                        $(".mustReadonly").prop("readOnly", true);
                    }

                } else {
                    $(".hideOthersDetail").show();
                    $(".readonlyOthersDetail").prop("readOnly", false);

                    if ('@readonly1' != 'False') {
                        $(".mustDisplay").css("display", "none");
                        $(".mustReadonly").prop("readOnly", true);
                    }
                }
            }
        }

        $("#DesignationDDL").select2();
        $("#RoleDDL").select2();
        $("#SupervisorDDL").select2();
        $("#empCNIC").mask("99999-9999999-9");
        $("#empPhone").mask("99-999-9999999");
    });

</script>
