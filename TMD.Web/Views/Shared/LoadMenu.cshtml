@using System.Collections.Generic
@using System.Configuration
@using System.Linq
@using TMD.Models.MenuModels
@model TMD.Web.ViewModels.Common.MenuViewModel
@{
    Layout = null;
    var currentUrl = Request.Url.ToString().Contains("?")? Request.Url.ToString().Split('?')[0]: Request.Url.ToString();
}

@{
    if (Model.MenuRights != null)
    {
        // loop through menu headers one by one and populate childs
        foreach (MenuRight header in Model.MenuHeaders.OrderBy(c => c.Menu.SortOrder).ToList())
        {
            // get child items with respect to menu header
            IList<MenuRight> menuRightchildList = Model.MenuRights.Where(menuright => menuright.Menu.ParentItem != null && menuright.Menu.ParentItem.MenuId == header.Menu.MenuId && header.Menu.IsMenuItem).OrderBy(c => c.Menu.SortOrder).ToList();

            if (!menuRightchildList.Any())
            {
                <li class=@((currentUrl.Contains(header.Menu.MenuTargetController) == true)? "active" : "")>
                    <a href="@(Url.Action(header.Menu.MenuFunction, header.Menu.MenuTargetController))" class="@header.Menu.MenuItemClass">
                        <i class="icon-photon @header.Menu.MenuImagePath"></i>
                        <span class="title">@header.Menu.MenuTitle</span>
                        <span class="selected"></span>
                    </a>
                </li>
            }
            else
            {
                     <li>
                    <a href="javascript:;">
                        <i class="@header.Menu.MenuImagePath"></i>
                        <span class="title">@header.Menu.MenuTitle</span>
                        <span class="arrow"></span>
                        <span class="selected"></span>
                    </a>
                    <ul class="sub-menu">
                        @{
                            foreach (MenuRight menuRight in menuRightchildList)
                            {
                                // display childs
                                <li class=@(currentUrl.Contains(menuRight.Menu.MenuTargetController) == true ? "innerSelected" : "")>
                                    <a href="@Url.Action(menuRight.Menu.MenuFunction, menuRight.Menu.MenuTargetController)" class="@menuRight.Menu.MenuItemClass">
                                        <i class="@menuRight.Menu.MenuImagePath"></i>
                                        <span class="title">@menuRight.Menu.MenuTitle</span>
                                    </a>
                                    @*@Html.ActionLink(menuRight.Menu.MenuTitle, menuRight.Menu.MenuFunction, menuRight.Menu.MenuTargetController, null, new { @class = Request.Url.ToString().Contains(menuRight.Menu.MenuTargetController + "/" + menuRight.Menu.MenuFunction) == true ? "active innerSelected" : "" })*@
                                </li>
                            }
                        }
                    </ul>
                      </li>
                }
          
        }
    }
}

<script>
    $(document)
        .ready(function () {

            $('.innerSelected').closest('ul').closest('li').addClass('active open');
        });
</script>